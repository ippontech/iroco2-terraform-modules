schemaVersion: '0.3'
description: |-
  *Replace this default text with instructions or other information about your runbook.*

  ---
  # What is Markdown?
  Markdown is a lightweight markup language that converts your content with plain text formatting to structurally valid rich text.
  ## You can add headings
  You can add *italics* or make the font **bold**.
  1. Create numbered lists
  * Add bullet points
  >Indent `code samples`

  You can create a [link to another webpage](https://aws.amazon.com).
parameters:
  VpcEndpointList:
    type: MapList
assumeRole: ${aws_iam_role_arn}
mainSteps:
  - name: CreateVpcEndpoint
    action: aws:executeScript
    isEnd: true
    inputs:
      Runtime: python3.8
      Handler: create_vpc_endpoints
      Script: |
        import boto3
        
        def create_vpc_endpoints(events, context):
            client = boto3.client('ec2')
            created_endpoints = []
            vpc_endpoint_list = events['VpcList']
            
            for endpoint in vpc_endpoint_list:
              try:
                  if endpoint["VpcEndpointType"] == "Interface":
                    response = client.create_vpc_endpoint(
                        VpcId=endpoint["VpcId"],
                        ServiceName=endpoint["ServiceName"],
                        VpcEndpointType=endpoint["VpcEndpointType"],
                        SubnetIds=endpoint["SubnetIds"],
                        SecurityGroupIds=endpoint["SecurityGroupId"],
                        PrivateDnsEnabled=endpoint["PrivateDnsEnabled"],
                        TagSpecifications=endpoint["TagSpecifications"]
                    )
                  elif endpoint["VpcEndpointType"] == "Gateway":
                    response = client.create_vpc_endpoint(
                        VpcId=endpoint["VpcId"],
                        ServiceName=endpoint["ServiceName"],
                        VpcEndpointType=endpoint["VpcEndpointType"],
                        RouteTableIds=endpoint["RouteTableIds"],
                        TagSpecifications=endpoint["TagSpecifications"]
                    )
                  created_endpoints.append(response['VpcEndpoint']['VpcEndpointId'])

              except Exception as e:
                  print(f"Error creating VPC endpoint: {e}")
                  raise e

            return created_endpoints
      InputPayload:
        VpcList: '{{ VpcEndpointList }}'
